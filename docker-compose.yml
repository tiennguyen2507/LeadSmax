version: "3.8"

services:
  # MongoDB Database
  mongo:
    image: mongo:latest
    container_name: leadsmax_mongo
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: leadsmax_user
      MONGO_INITDB_ROOT_PASSWORD: leadsmax_pass
      MONGO_INITDB_DATABASE: leadsmax_db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - leadsmax_network

  # MongoDB Express (Admin UI)
  mongo-express:
    image: mongo-express:latest
    container_name: leadsmax_mongo_express
    restart: unless-stopped
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: leadsmax_user
      ME_CONFIG_MONGODB_ADMINPASSWORD: leadsmax_pass
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_PORT: 27017
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    ports:
      - "8081:8081"
    depends_on:
      - mongo
    networks:
      - leadsmax_network

  # Backend API (NestJS)
  backend:
    build:
      context: ./blog-data-BE
      dockerfile: Dockerfile
    container_name: leadsmax_backend
    restart: unless-stopped
    environment:
      MONGO_URI: mongodb://leadsmax_user:leadsmax_pass@mongo:27017/leadsmax_db?authSource=admin
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    networks:
      - leadsmax_network

  # Frontend Admin (Next.js)
  frontend-admin:
    build:
      context: ./blog-admin-FE
      dockerfile: Dockerfile
    container_name: leadsmax_frontend_admin
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NEXT_PUBLIC_API_URL: http://backend:3000
    ports:
      - "3001:3000"
    depends_on:
      - backend
    networks:
      - leadsmax_network

  # Landing Page (Nuxt.js)
  frontend-landing:
    build:
      context: ./lading-page-FE
      dockerfile: Dockerfile
    container_name: leadsmax_frontend_landing
    restart: unless-stopped
    environment:
      NODE_ENV: production
      NUXT_PUBLIC_API_URL: http://backend:3000
    ports:
      - "3002:3000"
    depends_on:
      - backend
    networks:
      - leadsmax_network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: leadsmax_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend-admin
      - frontend-landing
    networks:
      - leadsmax_network

volumes:
  mongo_data:

networks:
  leadsmax_network:
    driver: bridge
